{"mappings":"AAAA,EAA0E,AAA1E,wEAA0E;AAE1E,EAA8E,AAA9E,4EAA8E;AAC9E,EAA0D,AAA1D,wDAA0D;AAE1D,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAC9C,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;AAC9C,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,CAAI;AAClC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO;AACjD,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,CAAI;AACtC,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY;AAC5C,EAAuC,AAAvC,qCAAuC;eAExB,aAAa,GAAG,CAAC;IAC9B,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACxD,KAAK,EAAE,CAAC;YAAC,KAAK,EAAE,IAAI;YAAE,MAAM,EAAE,IAAI;QAAC,CAAC;IACtC,CAAC;IACD,KAAK,CAAC,SAAS,GAAG,MAAM;IACxB,KAAK,CAAC,KAAK,CAAC,IAAI;IAEhB,EAAuC,AAAvC,qCAAuC;IACvC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU;IAC/B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW;IACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW;AACjD,CAAC;eAEc,MAAM,GAAG,CAAC;IACvB,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK;IAC7C,EAAoB,AAApB,kBAAoB;IACpB,EAAkE,AAAlE,gEAAkE;IAClE,KAAK,CAAC,OAAO,CAAC,QAAQ;IACtB,qBAAqB,CAAC,MAAM,EAAG,CAA4D,AAA5D,EAA4D,AAA5D,0DAA4D;AAE7F,CAAC;SAEQ,QAAQ,CAAC,IAAI,EAAE,CAAC;IACxB,KAAK,CAAC,CAAC,CAAA,KAAK,GAAE,MAAM,GAAE,GAAG,GAAE,IAAI,EAAA,CAAC,GAAG,IAAI,CAAC,WAAW;IACnD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;AACrC,CAAC;AAED,aAAa,GAAG,IAAI,CAAC,MAAM","sources":["pixelated-face.js"],"sourcesContent":["// The face detection does not work on all browsers and operating systems.\n\n// If you are getting a `Face detection service unavailable` error or similar,\n// it's possible that it won't work for you at the moment.\n\nconst video = document.querySelector('.webcam');\nconst canvas = document.querySelector('.video');\nconst ctx = canvas.getContext('2d');\nconst faceCanvas = document.querySelector('.face');\nconst faceCtx = canvas.getContext('2d');\nconst faceDetector = new window.FaceDetector();\n// write function to populate users vid\n\nasync function populateVideo() {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    video: { width: 1920, height: 1080 }\n  });\n  video.srcObject = stream;\n  await video.play();\n\n  // size canvas to be same size as video\n  canvas.width = video.videoWidth;\n  canvas.height = video.videoHeight;\n  console.log(video.videoWidth, video.videoHeight);\n};\n\nasync function detect() {\n  const faces = await faceDetector.detect(video);\n  //console.log(faces)\n  // ask browser when next animation frame is then run detect for us\n  faces.forEach(drawFace);\n  requestAnimationFrame(detect); // recursion when a function calls itself from within itself\n\n}\n\nfunction drawFace(face) {\n const {width, height, top, left} = face.boundingBox;\n console.log(width, height, top, left)\n}\n\npopulateVideo().then(detect);\n\n"],"names":[],"version":3,"file":"face.78b1ac0f.js.map","sourceRoot":"/__parcel_source_root/"}